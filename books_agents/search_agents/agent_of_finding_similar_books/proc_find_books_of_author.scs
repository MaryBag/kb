scp_program -> proc_find_books_of_author
(*
    -> rrel_params: ...
    (*
        -> rrel_1: rrel_in: _author;;
        -> rrel_2: rrel_in: _author_books;;
    *);;

    -> rrel_operators: ...
    (*
    	
        -> rrel_init: .proc_find_books_of_author_operator_print_start
        (*
            <- printNl;;

            -> rrel_1: rrel_scp_const: [Начало. Процедура нахождения книг автора];;

            => nrel_goto: .proc_find_books_of_author_operator_find_author_all_books;;
        *);;


        // Поиск книг автора
        -> .proc_find_books_of_author_operator_find_author_all_books
        (*
            <- searchSetStr5;;

            -> rrel_1: rrel_assign: rrel_scp_var: _book_to_find;;
            -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _author;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _pos_arc;;
            -> rrel_5: rrel_fixed:  rrel_scp_const: nrel_author;;

            -> rrel_set_1: rrel_assign: rrel_scp_var: _temp_author_books_set;;

            => nrel_then: .proc_find_books_of_author_operator_loop_books;;
            => nrel_else: .proc_find_books_of_author_operator_books_not_found;;
        *);;

        -> .proc_find_books_of_author_operator_loop_books
        (*
            <- searchElStr3;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _temp_author_books_set;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _temp_book_arc;;
            -> rrel_3: rrel_assign: rrel_scp_var: _book;;

            => nrel_then: .proc_find_books_of_author_operator_erase_book_from_temp;;

            => nrel_else: .proc_find_books_of_author_operator_books_found;;
        *);;

         -> .proc_find_books_of_author_operator_erase_book_from_temp
        (*
            <- eraseEl;;

            -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _temp_book_arc;;

            => nrel_goto: .proc_find_books_of_author_operator_check_exist;;
        *);;


        -> .proc_find_books_of_author_operator_check_exist
        (*
            <- searchSetStr3;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _author_books;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _temp_author_book_arc;;
            -> rrel_3: rrel_assign: rrel_scp_var: _curr_author_book;;

            -> rrel_set_3: rrel_assign: rrel_scp_var: _temp_author_books;;

			=> nrel_then: .proc_find_books_of_author_operator_check_exist_2;;
			=> nrel_else: .proc_find_books_of_author_operator_add_to_author_books_first_book;;
        *);;

         -> .proc_find_books_of_author_operator_check_exist_2
        (*
            <- searchElStr3;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _temp_author_books;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _temp_curr_book_arc_in_author_books;;
            -> rrel_3: rrel_assign: rrel_scp_var: _curr_temp_author_book;;

			=> nrel_then: .proc_find_books_of_author_operator_check_exist_3;;
			=> nrel_else: .proc_find_books_of_author_operator_add_to_author_books;;
        *);;

         -> .proc_find_books_of_author_operator_check_exist_3
        (*
            <- eraseEl;;

            -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _temp_curr_book_arc_in_author_books;;

            => nrel_goto: .proc_find_books_of_author_operator_check_exist_4;;
        *);;

        -> .proc_find_books_of_author_operator_check_exist_4
        (*
            <- ifCoin;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _curr_temp_author_book;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _book;;

            => nrel_then: .proc_find_books_of_author_operator_loop_books;;
            => nrel_else: .proc_find_books_of_author_operator_check_exist_2;;
         *);;


        -> .proc_find_books_of_author_operator_add_to_author_books_first_book
        (*
            <- genElStr3;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _author_books;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _temp_book_arc;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _book;;

	        => nrel_goto: .proc_find_books_of_author_operator_loop_books;;
        *);;

        -> .proc_find_books_of_author_operator_add_to_author_books
        (*
            <- genElStr3;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _author_books;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _temp_book_arc;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _book;;

	        => nrel_goto: .proc_find_books_of_author_operator_loop_books;;
        *);;

        -> .proc_find_books_of_author_operator_books_found
        (*
            <- printNl;;

            -> rrel_1: rrel_scp_const: [Книги автора найдены!];;
            => nrel_goto: .proc_find_books_of_author_operator_books_print_result;;
        *);;

        -> .proc_find_books_of_author_operator_books_print_result
        (*
            <- printEl;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _author_books;;
            => nrel_goto: .proc_find_books_of_author_operator_print_end;;
        *);;

        -> .proc_find_books_of_author_operator_books_not_found
        (*
            <- printNl;;

            -> rrel_1: rrel_scp_const: [Книги автора не найдены!];;

            => nrel_goto: .proc_find_books_of_author_operator_print_end;;
        *);;

	    -> .proc_find_books_of_author_operator_print_end
        (*
            <- printNl;;

            -> rrel_1: rrel_scp_const: [Конец обработки. Процедура поиска книг автора];;

            => nrel_goto: .proc_find_books_of_author_operator_return;;
        *);;

    	-> .proc_find_books_of_author_operator_return
    	(*
    		<- return;;
    	*);;
    *);;
*);;
